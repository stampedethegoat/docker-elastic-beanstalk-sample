# .ebextensions/99datadog.config
option_settings:
    - namespace:  aws:elasticbeanstalk:application:environment
      option_name:  DD_API_KEY
      value:  "8f2dc5c58b257b05f800643685af55b2"

files:
    #"/etc/datadog-agent/conf.d/docker.d/conf.yaml":
        #mode: "000755"
        #owner: root
        #group: root
        #content: |
          #logs:
              #- type: docker
                #service: docker
                #source: docker

    "/etc/datadog-agent/conf.d/docker.d/docker_daemon.yaml":
        mode: "000755"
        owner: root
        group: root
        content: |
          init_config:
          instances:
              - url: "unix://var/run/docker.sock"
                new_tag_names: true

    "/configure_datadog_yaml.sh":
        mode: "000700"
        owner: root
        group: root
        content: |
            #!/bin/bash
            DD_KEY="$(/opt/elasticbeanstalk/bin/get-config environment -k DD_API_KEY)"
            sed 's/api_key:.*/api_key: '$DD_KEY'/' /etc/datadog-agent/datadog.yaml.example > /etc/datadog-agent/datadog.yaml
            echo -e "tags:\n  - docker-vibes" >> /etc/datadog-agent/datadog.yaml

            # https://docs.datadoghq.com/integrations/docker_daemon/#host-installation

            sudo usermod -a -G docker dd-agent
            # enable logging --> This portion is from Bowery Farming
            echo -e "logs_enabled: true" >> /etc/datadog-agent/datadog.yaml
            echo -e "listeners:\n  - name: docker" >> /etc/datadog-agent/datadog.yaml
            echo -e "config_providers:\n  - name: docker \n    polling: true" >> /etc/datadog-agent/datadog.yaml
            echo -e "log_format_json: true" >> /etc/datadog-agent/datadog.yaml
            echo -e "logs_config:\n  container_collect_all: true" >> /etc/datadog-agent/datadog.yaml
    "/datadog/datadog.repo":
        mode: "000644"
        owner: root
        group: root
        content: |
            [datadog]
            name = Datadog, Inc.
            baseurl = https://yum.datadoghq.com/stable/6/x86_64/
            enabled=1
            gpgcheck=1
            gpgkey=https://yum.datadoghq.com/DATADOG_RPM_KEY.public


    "/datadog/hooks/99start_datadog.sh":
        mode: "000755"
        owner: root
        group: root
        content: |
            #!/bin/bash
            STATUS=`sudo initctl status datadog-agent`
            if [[ "$STATUS" == *"datadog-agent start/running"* ]]
            then
              echo "Agent already running"
            else
              # running this from @jamie.fullaondo
              sudo usermod -a -G docker dd-agent
              echo "Agent starting..."
              sudo initctl start datadog-agent
            fi

    "/datadog/hooks/99stop_datadog.sh":
        mode: "000755"
        owner: root
        group: root
        content: |
            #!/bin/bash
            STATUS=`sudo initctl status datadog-agent`
            if [[ "$STATUS" == *"datadog-agent stop/waiting"* ]]
            then
              echo "Agent already stopped"
            else
              echo "Agent stopping..."
              sudo initctl stop datadog-agent
            fi

container_commands:
    02mkdir_appdeploy_post:
        test: '[ ! -d /opt/elasticbeanstalk/hooks/appdeploy/post ]'
        command: "mkdir /opt/elasticbeanstalk/hooks/appdeploy/post"
    02mkdir_configdeploy_post:
        test: '[ ! -d /opt/elasticbeanstalk/hooks/configdeploy/post ]'
        command: "mkdir /opt/elasticbeanstalk/hooks/configdeploy/post"
    10appdeploy_pre_stop:
        test: '[ -f /datadog/hooks/99stop_datadog.sh ]'
        command: "cp /datadog/hooks/99stop_datadog.sh /opt/elasticbeanstalk/hooks/appdeploy/pre/"
    11appdeploy_post_start:
        test: '[ -f /datadog/hooks/99start_datadog.sh ]'
        command: "cp /datadog/hooks/99start_datadog.sh /opt/elasticbeanstalk/hooks/appdeploy/post/"
    20preinit_stop:
        test: '[ -f /datadog/hooks/99stop_datadog.sh ]'
        command: "cp /datadog/hooks/99stop_datadog.sh /opt/elasticbeanstalk/hooks/preinit"
    21postinit_start:
        test: '[ -f /datadog/hooks/99start_datadog.sh ]'
        command: "cp /datadog/hooks/99start_datadog.sh /opt/elasticbeanstalk/hooks/postinit"
    30configdeploy_pre_stop:
        test: '[ -f /datadog/hooks/99stop_datadog.sh ]'
        command: "cp /datadog/hooks/99stop_datadog.sh /opt/elasticbeanstalk/hooks/configdeploy/pre/"
    31configdeploy_post_start:
        test: '[ -f /datadog/hooks/99start_datadog.sh ]'
        command: "cp /datadog/hooks/99start_datadog.sh /opt/elasticbeanstalk/hooks/configdeploy/post/"
    90install_datadog:
        test: '[ -f /datadog/datadog.repo ]'
        command: "cp /datadog/datadog.repo /etc/yum.repos.d/datadog.repo; yum -y makecache; yum -y install datadog-agent"
    91setup_datadog:
        test: '[ -x /configure_datadog_yaml.sh ]'
        command: "/configure_datadog_yaml.sh"

